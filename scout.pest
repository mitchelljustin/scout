//
// Created by intellij-pest on 2023-07-13
// scout
// Author: mitch
//

program = {
    SOI ~
    top_stmt_line* ~
    EOI
}

top_stmt = {
    func_def |
    mod_def |
    stmt
}

top_stmt_line = {
    NEWLINE | (top_stmt ~ NEWLINE)
}

stmt_line = {
    NEWLINE | (stmt ~ NEWLINE)
}

stmt = {
    var_def |
    return_stmt |
    for_loop |
    expr
}

for_loop = {
    "for" ~ ident ~ "in" ~ expr ~ NEWLINE ~
        body ~
    "end"
}

body = {
    stmt_line*
}

mod_def = {
    "mod" ~ ident ~ NEWLINE ~ mod_body ~ "end"
}

mod_body = {
    (func_def ~ NEWLINE)*
}

expr = {
    multiline_expr |
    if_expr |
    expr_bin
}

expr_bin = {
    expr_atom ~ (bin_op ~ expr_bin)?
}

expr_atom = {
    grouping |
    call |
    literal |
    var_ref
}

grouping = {
    "(" ~ expr ~ ")"
}

var_ref = { ident }

multiline_expr = {
    "do" ~ NEWLINE ~ stmt_line* ~ "end"
}

return_stmt = {
    "return" ~ expr
}

if_expr = {
    "if" ~ expr ~ NEWLINE ~
        then_body ~
    "else" ~ NEWLINE ~
        else_body? ~
    "end"
}

bin_op = { add | subtract | multiply | divide }
    add      = { "+" }
    subtract = { "-" }
    multiply = { "*" }
    divide   = { "/" }

then_body = { stmt_line* }
else_body = { stmt_line* }

func_def = {
    "fn" ~ ident ~ "(" ~ param_list ~ ")" ~ "=" ~ expr
}

var_def = {
    ident ~ "=" ~ expr
}

call = {
    path ~ "(" ~ arg_list ~ ")"
}

path = {
    ident ~ ("::" ~ ident)*
}

param_list = {
    (ident ~ ("," ~ ident)*) | ""
}

arg_list = { expr_list }

expr_list = {
    (expr ~ ("," ~ expr)*) | ""
}

literal = {
    number | string | bool | array | nil
}

array = { "[" ~ expr_list ~ "]" }

bool = @{ "true" | "false" }
nil = @{ "nil" }

KEYWORD = @{ "fn" | "do" | "end" | "mod" | "if" | "else" | "for" | "in" }

ident = @{
    !(KEYWORD ~ !XID_START) ~
    XID_START ~ XID_CONTINUE*
}

number = @{
    "-"? ~
    integer ~
    ("." ~ mantissa)?
}
integer = _{ ASCII_NONZERO_DIGIT ~ ASCII_DIGIT+ | ASCII_DIGIT }
mantissa = _{ ASCII_DIGIT+ }

string = @{
    "\"" ~ string_inner ~ "\""
}

string_inner = ${(!"\"" ~ ANY)*}

WHITESPACE = _{ " " }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* }
